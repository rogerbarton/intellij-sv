{
    parserClass="com.github.rogerbarton.intellijsv.core.parser.SvParser"
//    parserUtilClass="com.github.rogerbarton.intellijsv.parser.SvParserUtil"

    extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

    psiClassPrefix="Sv"
    psiImplClassSuffix="Impl"
    psiPackage="com.github.rogerbarton.intellijsv.core.psi"
    psiImplPackage="com.github.rogerbarton.intellijsv.core.psi.impl"

    elementTypeHolderClass="com.github.rogerbarton.intellijsv.core.psi.SvTypes"
    elementTypeClass="com.github.rogerbarton.intellijsv.core.psi.SvElementType"
    tokenTypeClass="com.github.rogerbarton.intellijsv.core.psi.SvTokenType"

    tokens = [
        SEMICOLON   =  ';'
        DIV         =  '/'

        WHITE_SPACE     = 'regexp:[\s\r\n]+'
        IDENTIFIER      = 'regexp:[a-zA-Z_][a-zA-Z0-9_$]*'
        LINE_COMMENT    = 'regexp://.*'
        BLOCK_COMMENT   = 'regexp:/\*(.|\n)*\*/'
        UNSIGNED_NUMBER = 'regexp:\d[\d_]*'
    ]

    consumeTokenMethod("((?!.*_with_recover).*_recover)") = "consumeTokenFast"
}

SvFile ::= [ (TimeunitsDeclaration ';' )* ]

TimeunitsDeclaration ::=

      timeunit TimeLiteral [ '/' TimeLiteral ]
    | timeprecision TimeLiteral {
    pin(".*") = 1
    recoverWhile = Statement_recover
}

private Statement_recover ::= !';'

TimeLiteral ::= UNSIGNED_NUMBER TimeUnit

TimeUnit ::= s | ms | us | ns | ps | fs
